@page "/document/create"
@rendermode InteractiveServer

<PageTitle>Добавление договора</PageTitle>

<EditForm Model="documentNew" OnValidSubmit="SaveAddModal">
    <DataAnnotationsValidator />
    <h2>Добавление договора</h2>
    <div class="mb-3">
        <label class="form-label">Номер договора</label>
        <InputText class="form-control" @bind-Value="documentNew.Index" />
        <ValidationMessage For="@(() => documentNew.Index)" />
    </div>
    <div class="mb-3">
        <label class="form-label">Содержание договора</label>
        <InputTextArea class="form-control" @bind-Value="documentNew.Content" />
        <ValidationMessage For="@(() => documentNew.Content)" />
    </div>
    <div class="mb-3">
        <label class="form-label">Ответственный</label>
        <InputSelect class="form-control" @bind-Value="documentNew.OwnerId">
            <option value=""></option>
            @foreach (var user in users)
            {
                <option value="@user.Id">@user.Name</option>
            }
        </InputSelect>
        <ValidationMessage For="@(() => documentNew.OwnerId)" />
    </div>
    <a type="button" class="btn btn-secondary" href="/document">Отмена</a>
    <button type="submit" class="btn btn-primary">Добавить</button>
</EditForm>

@code {
    [Inject]
    public NavigationManager navigationManager{ get; set; }
    [Inject]
    public DocumentService documentService { get; set; }
    [Inject]
    public UserService userService { get; set; }

    List<UserOut> users = new();

    public DocumentIn documentNew;

    protected override void OnInitialized()
    {
        users = userService.getAll();
        documentNew = new DocumentIn();
    }

    protected void SaveAddModal()
    {
        try
        {
            var doc = documentService.AddDocument(documentNew);
            navigationManager.NavigateTo("/document");
        } catch
        {
            
        }
    }
}