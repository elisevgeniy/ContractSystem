@page "/document/{Id:int}/update"
@using SimpleBlazorMultiselect
@rendermode InteractiveServer

<PageTitle>Изменение договора</PageTitle>

<EditForm Model="documentUpdate" OnValidSubmit="UpdateDoc">
    <DataAnnotationsValidator />
    <h2>Добавление договора</h2>
    <div class="mb-3">
        <label class="form-label">Номер договора</label>
        <InputText class="form-control" @bind-Value="documentUpdate.Index" />
        <ValidationMessage For="@(() => documentUpdate.Index)" />
    </div>
    <div class="mb-3">
        <label class="form-label">Содержание договора</label>
        <InputTextArea class="form-control" @bind-Value="documentUpdate.Content" />
        <ValidationMessage For="@(() => documentUpdate.Content)" />
    </div>
    <div class="mb-3">
        <label class="form-label">Согласующие</label>
        <SimpleMultiselect Options="userList"
                           StringSelector="(item => item?.Name)"
                           @bind-SelectedOptions="documentUpdate.ApprovalUsers"
                           CanFilter="true" />
    </div>
    <div class="mb-3">
        <a type="button" class="btn btn-secondary" href="/document">Отмена</a>
        <button type="submit" class="btn btn-primary">Сохранить</button>
    </div>
</EditForm>

@code {
    [Parameter]
    public int Id { get; set; }

    [CascadingParameter]
    HttpContext httpContext { get; set; }
    [Inject]
    NavigationManager navigationManager { get; set; }
    [Inject]
    AuthenticationStateProvider authenticationStateProvider { get; set; }

    [Inject]
    public DocumentService documentService { get; set; }
    [Inject]
    public UserService userService { get; set; }

    AuthedUser authedUser = null;
    List<UserOut> userList = new();


    public DocumentUpdateIn documentUpdate;
    protected override async Task OnInitializedAsync()
    {
        try
        {
            var authState = await authenticationStateProvider.GetAuthenticationStateAsync();
            authedUser = authState.User.Adapt<AuthedUser>();

            documentUpdate = documentService.GetById(Id).Adapt<DocumentUpdateIn>();
            if (authedUser.Role != Role.Admin && documentUpdate.OwnerId != authedUser.Id)
            {
                if (httpContext != null)
                    httpContext.Response.Redirect("/403");
                else
                    navigationManager.NavigateTo("/403");
            }
            userList = userService.getAll();
        }
        catch
        {
            navigationManager.NavigateTo("/404");
        }
    }

    protected void UpdateDoc()
    {
        documentService.Update(documentUpdate);
        navigationManager.NavigateTo($"/document/{Id}");
    }
}