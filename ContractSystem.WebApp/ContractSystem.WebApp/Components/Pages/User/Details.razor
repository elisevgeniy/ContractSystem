@page "/user/{Id:int}"
@attribute [Authorize];

@if (user != null)
{
    <h3>Пользователь</h3>
    <label>Логин</label>
    <p>@user!.Login</p>
    <label>Имя</label>
    <p>@user!.Name</p>
}

@code {
    [Parameter]
    public int Id { get; set; }

    [Inject]
    UserService userService { get; set; }

    [Inject]
    AuthenticationStateProvider authenticationStateProvider { get; set; }

    [CascadingParameter]
    HttpContext httpContext { get; set; }

    private UserOut user;
    private AuthedUser authedUser;

    protected override async Task OnInitializedAsync()
    {
        var authState = await authenticationStateProvider.GetAuthenticationStateAsync();
        if (authState.User.Identity?.IsAuthenticated == true)
        {
            authedUser = authState.User.Adapt<AuthedUser>();
        }

        if (authedUser.Role != Role.Admin && authedUser.Id != Id) httpContext.Response.Redirect("/403");

        try
        {          
            user = userService.getById(Id);
        } catch (NotFoundException ex) {
            httpContext.Response.Redirect("/404");
        }
    }
}
